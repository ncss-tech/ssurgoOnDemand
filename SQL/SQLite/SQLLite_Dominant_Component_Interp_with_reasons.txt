
DROP TABLE IF EXISTS cointerp_lite;

CREATE TABLE cointerp_lite AS
SELECT  cokey
      ,mrulekey 
      ,mrulename
	  ,rulename
      ,ruledepth
      ,interphr 
      ,interphrc
	  ,cointerpkey

FROM[cointerp] WHERE mrulename = 'FOR - Mechanical Planting Suitability' ;


 SELECT areasymbol, musym, muname, mu.mukey/1  AS mukey, 
 (SELECT ROUND (AVG(interphr) over(partition by interphrc),2)
 FROM mapunit
 INNER JOIN component ON component.mukey=mapunit.mukey
 INNER JOIN cointerp_lite ON component.cokey = cointerp_lite.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE 'FOR - Mechanical Planting Suitability' GROUP BY interphrc, interphr
 ORDER BY SUM (comppct_r) DESC LIMIT 1)as rating,
 (SELECT interphrc
 FROM mapunit
 INNER JOIN component ON component.mukey=mapunit.mukey
 INNER JOIN cointerp_lite ON component.cokey = cointerp_lite.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE 'FOR - Mechanical Planting Suitability'
 GROUP BY interphrc, comppct_r ORDER BY SUM(comppct_r) over(partition by interphrc) DESC LIMIT 1) as class,
 
  (SELECT GROUP_CONCAT( DISTINCT interphrc)
FROM mapunit
INNER JOIN component ON component.mukey=mapunit.mukey AND compkind != 'miscellaneous area' 
INNER JOIN cointerp_lite ON component.cokey = cointerp_lite.cokey AND mapunit.mukey = mu.mukey 
AND ruledepth != 0 AND interphrc NOT LIKE 'Not%' AND mrulename LIKE 'FOR - Mechanical Planting Suitability' 
ORDER BY interphr DESC, interphrc
 )as reason
  
 FROM legend  AS l
 INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey 
 INNER JOIN component AS c1 ON c1.mukey=mu.mukey 
AND c1.cokey =
(SELECT c2.cokey FROM component AS c2
INNER JOIN mapunit AS mm1 ON c2.mukey=mm1.mukey AND c2.mukey=mu.mukey ORDER BY c2.comppct_r DESC, c2.cokey LIMIT 1)


 ORDER BY areasymbol, musym, muname, mu.mukey
 

